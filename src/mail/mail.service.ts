import { HttpException, HttpStatus, Injectable } from "@nestjs/common";
import { ActivateMailDto } from "./dto/activate-mail.dto";
import { MailerService } from "@nestjs-modules/mailer";
import { UsersService } from "../users/users.service";
import {SheltersService} from "../shelters/shelters.service";

@Injectable()
export class MailService {
  constructor(private mailerService: MailerService,
              private userService: UsersService,
              private shelterService: SheltersService
              ) {
  }

  async activateMail(dto: ActivateMailDto) {
    console.log('ActivateMailDto', dto);
    if (!dto?.isNotExamination) {
      let candidate;
      if (dto.isShelter) {

      } else {
        candidate = await this.shelterService.getShelterByEmail(dto.email);
      }
      if (candidate) {
        throw new HttpException(
            '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —Å—É—â–µ—Å—Ç–≤–µ—Ç',
            HttpStatus.BAD_REQUEST
        );
      }
    }

    const randomCode = Math.random().toString().slice(-6);
    const htmlTemplate = `
<!DOCTYPE html>
<html lang="ru">
    <body style="color: black; font-family: 'Roboto', sans-serif;">
        <header style="margin-bottom: 40px;">
            <h1 style="text-align: center; color: #fff; font-family: 'Courier New', Courier, monospace;">–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ td-market</h1>
        </header>
        
        <p style="text-align: center; color: #fff; font-family: 'Courier New', Courier, monospace; font-size: larger;">
            –í–∞—à –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: <span style="font-weight: 900;">${randomCode}</span>
        </p>
        
        <p style="text-align: center; color: #fff; font-family: 'Courier New', Courier, monospace;">
            –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–π –∫–æ–¥ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –∏ –ø–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –Ω–∏–∫–æ–º—É –µ–≥–æ –Ω–µ —Å–æ–æ–±—â–∞—Ç—å)
        </p>
        
        <div style="font-family: 'Courier New', Courier, monospace; color: #fff; font-size: 14px; padding-left: 10px">
            –ú–æ–∂–µ—Ç–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—Ç—å –∫–æ–¥, —ç—Ç–æ –≤–∞—à–µ –ø—Ä–∞–≤–æ. –í—ã–±–æ—Ä –º–µ–∂–¥—É –ø–æ–¥—á–∏–Ω–µ–Ω–∏–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –∏ –∑–∞—â–∏—Ç–æ–π –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ ‚Äî –≤–∞—à. –í–∞—à–∏ —Ä–µ—à–µ–Ω–∏—è ‚Äî –≤–∞—à–µ –ø—Ä–∞–≤–æ, –∏ –Ω–∏–∫—Ç–æ –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–æ —É–∫–∞–∑—ã–≤–∞—Ç—å –≤–∞–º–∏, —á—Ç–æ –¥–µ–ª–∞—Ç—å. –≠—Ç–æ –≤–∞—à –≤—ã–±–æ—Ä, –∏ –≤–∞—à–µ –ø—Ä–∞–≤–æ –Ω–∞ –Ω–µ–≥–æ –Ω–µ–æ—Å–ø–æ—Ä–∏–º–æ.ü¶ß
        </div>
        
        <div style="font-family: 'Courier New', Courier, monospace; color: #fff;">
            –¶–∏—Ç–∞—Ç–∞:<span style="font-weight: 900;">Chat gpt4</span>
        </div>
        
        <p style="text-align: center; color: #fff; font-family: 'Courier New', Courier, monospace;">
            –£–¥–∞—á–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫ –Ω–∞ td-market
        </p>
    </body>
</html>
    `;

    await this.mailerService.sendMail({
      from: process.env.SMTP_USER,
      to: dto.email,
      subject: '–ê–∫—Ç–∏–≤–∞—Ü–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–∞ TD-Market',
      text: '',  // –£–∫–∞–∂–∏—Ç–µ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É, —Ç–∞–∫ –∫–∞–∫ –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º HTML
      html: htmlTemplate,  // –ü–µ—Ä–µ–¥–∞–µ–º HTML-–∫–æ–¥ —à–∞–±–ª–æ–Ω–∞
    });

    return randomCode;
  }
}
